name: Release App

on:
  push:
    tags:
      - 'v*'

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.0      
      with:
        vs-version: 16.5

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.2

    - name: Restore NuGet Packages
      run: nuget restore YandexDiskSync.sln

    - name: Setup ENV
      run: |
        (Get-Content YandexDiskSync\Credentials.cs) -replace '{ID}','${{ secrets.YANDEX_ID }}' -replace '{SECRET}','${{ secrets.YANDEX_SECRET }}'|Set-Content YandexDiskSync\Credentials.cs
        "::set-env name=RELEASE_VERSION::${{ github.ref }}" -replace 'refs/tags/',''
        "::set-env name=TARGET::YandexDiskSync.${{ github.ref }}.zip" -replace 'refs/tags/',''

    - name: Build app
      run: msbuild YandexDiskSync.sln /p:Configuration=Release


    - name: Compile and Pack
      run: |
        Deps\KeePass.exe --plgx-create YandexDiskSync\bin\Release\
        Compress-Archive YandexDiskSync.plgx ${{ env.TARGET }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: YandexDiskSync.plgx

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ env.RELEASE_VERSION }}
        body: |
          Release ${{ env.RELEASE_VERSION }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ${{ env.TARGET }}
        asset_name: ${{ env.TARGET }}
        asset_content_type: application/zip
